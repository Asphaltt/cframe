// Code generated by protoc-gen-go. DO NOT EDIT.
// source: usercenter.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type UserInfo struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	UserEmail            string   `protobuf:"bytes,3,opt,name=userEmail,proto3" json:"userEmail,omitempty"`
	UserSecret           string   `protobuf:"bytes,4,opt,name=userSecret,proto3" json:"userSecret,omitempty"`
	CreatedAt            int64    `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	About                string   `protobuf:"bytes,6,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserInfo) Reset()         { *m = UserInfo{} }
func (m *UserInfo) String() string { return proto.CompactTextString(m) }
func (*UserInfo) ProtoMessage()    {}
func (*UserInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{0}
}

func (m *UserInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserInfo.Unmarshal(m, b)
}
func (m *UserInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserInfo.Marshal(b, m, deterministic)
}
func (m *UserInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserInfo.Merge(m, src)
}
func (m *UserInfo) XXX_Size() int {
	return xxx_messageInfo_UserInfo.Size(m)
}
func (m *UserInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_UserInfo.DiscardUnknown(m)
}

var xxx_messageInfo_UserInfo proto.InternalMessageInfo

func (m *UserInfo) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *UserInfo) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *UserInfo) GetUserEmail() string {
	if m != nil {
		return m.UserEmail
	}
	return ""
}

func (m *UserInfo) GetUserSecret() string {
	if m != nil {
		return m.UserSecret
	}
	return ""
}

func (m *UserInfo) GetCreatedAt() int64 {
	if m != nil {
		return m.CreatedAt
	}
	return 0
}

func (m *UserInfo) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

type GetUserBySecretReq struct {
	Secret               string   `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserBySecretReq) Reset()         { *m = GetUserBySecretReq{} }
func (m *GetUserBySecretReq) String() string { return proto.CompactTextString(m) }
func (*GetUserBySecretReq) ProtoMessage()    {}
func (*GetUserBySecretReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{1}
}

func (m *GetUserBySecretReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserBySecretReq.Unmarshal(m, b)
}
func (m *GetUserBySecretReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserBySecretReq.Marshal(b, m, deterministic)
}
func (m *GetUserBySecretReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserBySecretReq.Merge(m, src)
}
func (m *GetUserBySecretReq) XXX_Size() int {
	return xxx_messageInfo_GetUserBySecretReq.Size(m)
}
func (m *GetUserBySecretReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserBySecretReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserBySecretReq proto.InternalMessageInfo

func (m *GetUserBySecretReq) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

type GetUserBySecretReply struct {
	Code                 int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UserInfo             *UserInfo `protobuf:"bytes,3,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetUserBySecretReply) Reset()         { *m = GetUserBySecretReply{} }
func (m *GetUserBySecretReply) String() string { return proto.CompactTextString(m) }
func (*GetUserBySecretReply) ProtoMessage()    {}
func (*GetUserBySecretReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{2}
}

func (m *GetUserBySecretReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserBySecretReply.Unmarshal(m, b)
}
func (m *GetUserBySecretReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserBySecretReply.Marshal(b, m, deterministic)
}
func (m *GetUserBySecretReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserBySecretReply.Merge(m, src)
}
func (m *GetUserBySecretReply) XXX_Size() int {
	return xxx_messageInfo_GetUserBySecretReply.Size(m)
}
func (m *GetUserBySecretReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserBySecretReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserBySecretReply proto.InternalMessageInfo

func (m *GetUserBySecretReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetUserBySecretReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetUserBySecretReply) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type AddUserReq struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	Email                string   `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	About                string   `protobuf:"bytes,4,opt,name=about,proto3" json:"about,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddUserReq) Reset()         { *m = AddUserReq{} }
func (m *AddUserReq) String() string { return proto.CompactTextString(m) }
func (*AddUserReq) ProtoMessage()    {}
func (*AddUserReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{3}
}

func (m *AddUserReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserReq.Unmarshal(m, b)
}
func (m *AddUserReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserReq.Marshal(b, m, deterministic)
}
func (m *AddUserReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserReq.Merge(m, src)
}
func (m *AddUserReq) XXX_Size() int {
	return xxx_messageInfo_AddUserReq.Size(m)
}
func (m *AddUserReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserReq proto.InternalMessageInfo

func (m *AddUserReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *AddUserReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AddUserReq) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *AddUserReq) GetAbout() string {
	if m != nil {
		return m.About
	}
	return ""
}

type AddUserReply struct {
	Code                 int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UserInfo             *UserInfo `protobuf:"bytes,3,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AddUserReply) Reset()         { *m = AddUserReply{} }
func (m *AddUserReply) String() string { return proto.CompactTextString(m) }
func (*AddUserReply) ProtoMessage()    {}
func (*AddUserReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{4}
}

func (m *AddUserReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddUserReply.Unmarshal(m, b)
}
func (m *AddUserReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddUserReply.Marshal(b, m, deterministic)
}
func (m *AddUserReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddUserReply.Merge(m, src)
}
func (m *AddUserReply) XXX_Size() int {
	return xxx_messageInfo_AddUserReply.Size(m)
}
func (m *AddUserReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddUserReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddUserReply proto.InternalMessageInfo

func (m *AddUserReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddUserReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddUserReply) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type GetUserInfoReq struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserInfoReq) Reset()         { *m = GetUserInfoReq{} }
func (m *GetUserInfoReq) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoReq) ProtoMessage()    {}
func (*GetUserInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{5}
}

func (m *GetUserInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoReq.Unmarshal(m, b)
}
func (m *GetUserInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoReq.Marshal(b, m, deterministic)
}
func (m *GetUserInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoReq.Merge(m, src)
}
func (m *GetUserInfoReq) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoReq.Size(m)
}
func (m *GetUserInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoReq proto.InternalMessageInfo

func (m *GetUserInfoReq) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *GetUserInfoReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type GetUserInfoReply struct {
	Code                 int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	UserInfo             *UserInfo `protobuf:"bytes,3,opt,name=userInfo,proto3" json:"userInfo,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetUserInfoReply) Reset()         { *m = GetUserInfoReply{} }
func (m *GetUserInfoReply) String() string { return proto.CompactTextString(m) }
func (*GetUserInfoReply) ProtoMessage()    {}
func (*GetUserInfoReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{6}
}

func (m *GetUserInfoReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserInfoReply.Unmarshal(m, b)
}
func (m *GetUserInfoReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserInfoReply.Marshal(b, m, deterministic)
}
func (m *GetUserInfoReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserInfoReply.Merge(m, src)
}
func (m *GetUserInfoReply) XXX_Size() int {
	return xxx_messageInfo_GetUserInfoReply.Size(m)
}
func (m *GetUserInfoReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserInfoReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserInfoReply proto.InternalMessageInfo

func (m *GetUserInfoReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetUserInfoReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetUserInfoReply) GetUserInfo() *UserInfo {
	if m != nil {
		return m.UserInfo
	}
	return nil
}

type AuthorizeReq struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeReq) Reset()         { *m = AuthorizeReq{} }
func (m *AuthorizeReq) String() string { return proto.CompactTextString(m) }
func (*AuthorizeReq) ProtoMessage()    {}
func (*AuthorizeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{7}
}

func (m *AuthorizeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeReq.Unmarshal(m, b)
}
func (m *AuthorizeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeReq.Marshal(b, m, deterministic)
}
func (m *AuthorizeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeReq.Merge(m, src)
}
func (m *AuthorizeReq) XXX_Size() int {
	return xxx_messageInfo_AuthorizeReq.Size(m)
}
func (m *AuthorizeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeReq.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeReq proto.InternalMessageInfo

func (m *AuthorizeReq) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *AuthorizeReq) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type AuthorizeReplyBody struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	Token                string   `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	ExpiredIn            int64    `protobuf:"varint,3,opt,name=expiredIn,proto3" json:"expiredIn,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthorizeReplyBody) Reset()         { *m = AuthorizeReplyBody{} }
func (m *AuthorizeReplyBody) String() string { return proto.CompactTextString(m) }
func (*AuthorizeReplyBody) ProtoMessage()    {}
func (*AuthorizeReplyBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{8}
}

func (m *AuthorizeReplyBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeReplyBody.Unmarshal(m, b)
}
func (m *AuthorizeReplyBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeReplyBody.Marshal(b, m, deterministic)
}
func (m *AuthorizeReplyBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeReplyBody.Merge(m, src)
}
func (m *AuthorizeReplyBody) XXX_Size() int {
	return xxx_messageInfo_AuthorizeReplyBody.Size(m)
}
func (m *AuthorizeReplyBody) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeReplyBody.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeReplyBody proto.InternalMessageInfo

func (m *AuthorizeReplyBody) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AuthorizeReplyBody) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *AuthorizeReplyBody) GetExpiredIn() int64 {
	if m != nil {
		return m.ExpiredIn
	}
	return 0
}

type AuthorizeReply struct {
	Code                 int32               `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string              `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *AuthorizeReplyBody `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *AuthorizeReply) Reset()         { *m = AuthorizeReply{} }
func (m *AuthorizeReply) String() string { return proto.CompactTextString(m) }
func (*AuthorizeReply) ProtoMessage()    {}
func (*AuthorizeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{9}
}

func (m *AuthorizeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthorizeReply.Unmarshal(m, b)
}
func (m *AuthorizeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthorizeReply.Marshal(b, m, deterministic)
}
func (m *AuthorizeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthorizeReply.Merge(m, src)
}
func (m *AuthorizeReply) XXX_Size() int {
	return xxx_messageInfo_AuthorizeReply.Size(m)
}
func (m *AuthorizeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthorizeReply.DiscardUnknown(m)
}

var xxx_messageInfo_AuthorizeReply proto.InternalMessageInfo

func (m *AuthorizeReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AuthorizeReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AuthorizeReply) GetData() *AuthorizeReplyBody {
	if m != nil {
		return m.Data
	}
	return nil
}

type GetUserByTokenReq struct {
	Token                string   `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetUserByTokenReq) Reset()         { *m = GetUserByTokenReq{} }
func (m *GetUserByTokenReq) String() string { return proto.CompactTextString(m) }
func (*GetUserByTokenReq) ProtoMessage()    {}
func (*GetUserByTokenReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{10}
}

func (m *GetUserByTokenReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserByTokenReq.Unmarshal(m, b)
}
func (m *GetUserByTokenReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserByTokenReq.Marshal(b, m, deterministic)
}
func (m *GetUserByTokenReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserByTokenReq.Merge(m, src)
}
func (m *GetUserByTokenReq) XXX_Size() int {
	return xxx_messageInfo_GetUserByTokenReq.Size(m)
}
func (m *GetUserByTokenReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserByTokenReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserByTokenReq proto.InternalMessageInfo

func (m *GetUserByTokenReq) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

type GetUserByTokenReply struct {
	Code                 int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Data                 *UserInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *GetUserByTokenReply) Reset()         { *m = GetUserByTokenReply{} }
func (m *GetUserByTokenReply) String() string { return proto.CompactTextString(m) }
func (*GetUserByTokenReply) ProtoMessage()    {}
func (*GetUserByTokenReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_babf089d71f2a8dc, []int{11}
}

func (m *GetUserByTokenReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUserByTokenReply.Unmarshal(m, b)
}
func (m *GetUserByTokenReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUserByTokenReply.Marshal(b, m, deterministic)
}
func (m *GetUserByTokenReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUserByTokenReply.Merge(m, src)
}
func (m *GetUserByTokenReply) XXX_Size() int {
	return xxx_messageInfo_GetUserByTokenReply.Size(m)
}
func (m *GetUserByTokenReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUserByTokenReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetUserByTokenReply proto.InternalMessageInfo

func (m *GetUserByTokenReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetUserByTokenReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetUserByTokenReply) GetData() *UserInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

func init() {
	proto.RegisterType((*UserInfo)(nil), "usercenter.UserInfo")
	proto.RegisterType((*GetUserBySecretReq)(nil), "usercenter.GetUserBySecretReq")
	proto.RegisterType((*GetUserBySecretReply)(nil), "usercenter.GetUserBySecretReply")
	proto.RegisterType((*AddUserReq)(nil), "usercenter.AddUserReq")
	proto.RegisterType((*AddUserReply)(nil), "usercenter.AddUserReply")
	proto.RegisterType((*GetUserInfoReq)(nil), "usercenter.GetUserInfoReq")
	proto.RegisterType((*GetUserInfoReply)(nil), "usercenter.GetUserInfoReply")
	proto.RegisterType((*AuthorizeReq)(nil), "usercenter.AuthorizeReq")
	proto.RegisterType((*AuthorizeReplyBody)(nil), "usercenter.AuthorizeReplyBody")
	proto.RegisterType((*AuthorizeReply)(nil), "usercenter.AuthorizeReply")
	proto.RegisterType((*GetUserByTokenReq)(nil), "usercenter.GetUserByTokenReq")
	proto.RegisterType((*GetUserByTokenReply)(nil), "usercenter.GetUserByTokenReply")
}

func init() { proto.RegisterFile("usercenter.proto", fileDescriptor_babf089d71f2a8dc) }

var fileDescriptor_babf089d71f2a8dc = []byte{
	// 529 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0x4b, 0x6f, 0xd3, 0x40,
	0x10, 0xae, 0xc9, 0xa3, 0xc9, 0xa4, 0x2a, 0x65, 0x88, 0x2a, 0xcb, 0x2a, 0x25, 0xda, 0x53, 0x90,
	0x50, 0x41, 0xe1, 0xcc, 0x21, 0x41, 0x3c, 0x72, 0xe1, 0x60, 0xc8, 0x85, 0x13, 0x6e, 0x76, 0x80,
	0x88, 0xc4, 0xeb, 0xae, 0x37, 0x05, 0xf3, 0x07, 0xf8, 0x3b, 0xfc, 0x44, 0xb4, 0xbb, 0x7e, 0xac,
	0xf3, 0x28, 0x2a, 0x87, 0x9e, 0xb2, 0x33, 0xdf, 0xec, 0xcc, 0x37, 0xdf, 0x64, 0xd6, 0x70, 0xb2,
	0x4e, 0x49, 0xce, 0x29, 0x56, 0x24, 0x2f, 0x12, 0x29, 0x94, 0x40, 0xa8, 0x3c, 0xec, 0x8f, 0x07,
	0x9d, 0x59, 0x4a, 0x72, 0x1a, 0x7f, 0x11, 0x78, 0x0a, 0x6d, 0x0d, 0x4d, 0xb9, 0xef, 0x0d, 0xbc,
	0x61, 0x37, 0xcc, 0x2d, 0x0c, 0xa0, 0xa3, 0x4f, 0xef, 0xa3, 0x15, 0xf9, 0xf7, 0x0c, 0x52, 0xda,
	0x78, 0x06, 0x5d, 0x7d, 0x7e, 0xbd, 0x8a, 0x16, 0x4b, 0xbf, 0x61, 0xc0, 0xca, 0x81, 0xe7, 0x60,
	0x8a, 0x7d, 0xa0, 0xb9, 0x24, 0xe5, 0x37, 0x0d, 0xec, 0x78, 0xf4, 0xed, 0xb9, 0xa4, 0x48, 0x11,
	0x1f, 0x2b, 0xbf, 0x35, 0xf0, 0x86, 0x8d, 0xb0, 0x72, 0x60, 0x1f, 0x5a, 0xd1, 0xa5, 0x58, 0x2b,
	0xbf, 0x6d, 0x2e, 0x5a, 0x83, 0x3d, 0x05, 0x7c, 0x4b, 0x4a, 0x93, 0x9e, 0x64, 0x36, 0x4d, 0x48,
	0x57, 0x9a, 0x7b, 0x6a, 0xab, 0xe4, 0xdc, 0xad, 0xc5, 0xae, 0xa1, 0xbf, 0x15, 0x9d, 0x2c, 0x33,
	0x44, 0x68, 0xce, 0x05, 0x27, 0x13, 0xdd, 0x0a, 0xcd, 0x19, 0x7d, 0x38, 0x5c, 0x51, 0x9a, 0x46,
	0x5f, 0x8b, 0x36, 0x0b, 0x13, 0x9f, 0x5b, 0x05, 0xb4, 0x4a, 0xa6, 0xc9, 0xde, 0xa8, 0x7f, 0xe1,
	0xe8, 0x5a, 0x28, 0x18, 0x96, 0x51, 0x2c, 0x01, 0x18, 0x73, 0xae, 0x01, 0xcd, 0xce, 0x55, 0xd0,
	0xdb, 0x50, 0x30, 0x80, 0x4e, 0x12, 0xa5, 0xe9, 0x0f, 0x21, 0x79, 0xa1, 0x6e, 0x61, 0x6b, 0x05,
	0xc8, 0x51, 0xd6, 0x1a, 0x95, 0x2e, 0x4d, 0x57, 0x97, 0x18, 0x8e, 0xca, 0x8a, 0x77, 0xd1, 0xe1,
	0x3b, 0x38, 0xce, 0x95, 0x35, 0xc0, 0xff, 0x77, 0xc9, 0x24, 0x9c, 0xd4, 0x32, 0xdd, 0x05, 0xfb,
	0x37, 0x70, 0x34, 0x5e, 0xab, 0x6f, 0x42, 0x2e, 0x7e, 0x91, 0xc3, 0x3d, 0xde, 0xe0, 0x1e, 0xff,
	0x8b, 0xfb, 0x67, 0x40, 0x27, 0x4f, 0xb2, 0xcc, 0x26, 0x82, 0x67, 0x7b, 0x37, 0xa9, 0x0f, 0x2d,
	0x25, 0xbe, 0x53, 0x9c, 0xa7, 0xb1, 0x86, 0xde, 0x02, 0xfa, 0x99, 0x2c, 0x24, 0xf1, 0x69, 0x6c,
	0xe8, 0x37, 0xc2, 0xca, 0xc1, 0x24, 0x1c, 0xd7, 0x2b, 0xdc, 0x52, 0x9b, 0x11, 0x34, 0x79, 0xa4,
	0xa2, 0x5c, 0x97, 0x73, 0x57, 0x97, 0x6d, 0xe6, 0xa1, 0x89, 0x65, 0x4f, 0xe0, 0x41, 0xb9, 0x35,
	0x1f, 0x35, 0x47, 0x2d, 0x51, 0x49, 0xde, 0x73, 0xc8, 0xb3, 0x15, 0x3c, 0xdc, 0x0c, 0xbd, 0x3d,
	0xc7, 0x61, 0x8d, 0xe3, 0xee, 0xd9, 0x99, 0x88, 0xd1, 0xef, 0x06, 0xf4, 0x66, 0xe6, 0x01, 0x91,
	0xd7, 0x8b, 0x39, 0xe1, 0x0c, 0xee, 0x6f, 0xec, 0x37, 0xd6, 0x5a, 0xdc, 0x7e, 0x2a, 0x82, 0xc1,
	0x8d, 0x78, 0xb2, 0xcc, 0xd8, 0x01, 0xbe, 0x84, 0xc3, 0x7c, 0x99, 0xf0, 0xb4, 0xa6, 0x58, 0xb9,
	0xd3, 0x81, 0xbf, 0xd3, 0x6f, 0xaf, 0x4f, 0xa1, 0xe7, 0xfc, 0xa3, 0x31, 0xd8, 0x51, 0x31, 0x5f,
	0x9a, 0xe0, 0x6c, 0x2f, 0x66, 0x53, 0xbd, 0x82, 0x6e, 0x39, 0x26, 0xf4, 0xf7, 0x4c, 0xef, 0x2a,
	0x08, 0xf6, 0xcf, 0x95, 0x1d, 0x60, 0x58, 0xee, 0x6a, 0x3e, 0x24, 0x7c, 0xb4, 0x53, 0x84, 0x62,
	0xd6, 0xc1, 0xe3, 0x9b, 0x60, 0x93, 0x73, 0xd2, 0xf9, 0xd4, 0x7e, 0x66, 0x3e, 0x28, 0x97, 0x6d,
	0xf3, 0xf3, 0xe2, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xa0, 0x49, 0x0b, 0x44, 0x6b, 0x06, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	GetUserBySecret(ctx context.Context, in *GetUserBySecretReq, opts ...grpc.CallOption) (*GetUserBySecretReply, error)
	AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserReply, error)
	GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoReply, error)
	Authorize(ctx context.Context, in *AuthorizeReq, opts ...grpc.CallOption) (*AuthorizeReply, error)
	GetUserByToken(ctx context.Context, in *GetUserByTokenReq, opts ...grpc.CallOption) (*GetUserByTokenReply, error)
}

type userServiceClient struct {
	cc *grpc.ClientConn
}

func NewUserServiceClient(cc *grpc.ClientConn) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) GetUserBySecret(ctx context.Context, in *GetUserBySecretReq, opts ...grpc.CallOption) (*GetUserBySecretReply, error) {
	out := new(GetUserBySecretReply)
	err := c.cc.Invoke(ctx, "/usercenter.UserService/GetUserBySecret", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddUser(ctx context.Context, in *AddUserReq, opts ...grpc.CallOption) (*AddUserReply, error) {
	out := new(AddUserReply)
	err := c.cc.Invoke(ctx, "/usercenter.UserService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserInfo(ctx context.Context, in *GetUserInfoReq, opts ...grpc.CallOption) (*GetUserInfoReply, error) {
	out := new(GetUserInfoReply)
	err := c.cc.Invoke(ctx, "/usercenter.UserService/GetUserInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) Authorize(ctx context.Context, in *AuthorizeReq, opts ...grpc.CallOption) (*AuthorizeReply, error) {
	out := new(AuthorizeReply)
	err := c.cc.Invoke(ctx, "/usercenter.UserService/Authorize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUserByToken(ctx context.Context, in *GetUserByTokenReq, opts ...grpc.CallOption) (*GetUserByTokenReply, error) {
	out := new(GetUserByTokenReply)
	err := c.cc.Invoke(ctx, "/usercenter.UserService/GetUserByToken", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	GetUserBySecret(context.Context, *GetUserBySecretReq) (*GetUserBySecretReply, error)
	AddUser(context.Context, *AddUserReq) (*AddUserReply, error)
	GetUserInfo(context.Context, *GetUserInfoReq) (*GetUserInfoReply, error)
	Authorize(context.Context, *AuthorizeReq) (*AuthorizeReply, error)
	GetUserByToken(context.Context, *GetUserByTokenReq) (*GetUserByTokenReply, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) GetUserBySecret(ctx context.Context, req *GetUserBySecretReq) (*GetUserBySecretReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserBySecret not implemented")
}
func (*UnimplementedUserServiceServer) AddUser(ctx context.Context, req *AddUserReq) (*AddUserReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedUserServiceServer) GetUserInfo(ctx context.Context, req *GetUserInfoReq) (*GetUserInfoReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserInfo not implemented")
}
func (*UnimplementedUserServiceServer) Authorize(ctx context.Context, req *AuthorizeReq) (*AuthorizeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Authorize not implemented")
}
func (*UnimplementedUserServiceServer) GetUserByToken(ctx context.Context, req *GetUserByTokenReq) (*GetUserByTokenReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUserByToken not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_GetUserBySecret_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserBySecretReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserBySecret(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usercenter.UserService/GetUserBySecret",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserBySecret(ctx, req.(*GetUserBySecretReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddUserReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usercenter.UserService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddUser(ctx, req.(*AddUserReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usercenter.UserService/GetUserInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserInfo(ctx, req.(*GetUserInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_Authorize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthorizeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).Authorize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usercenter.UserService/Authorize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).Authorize(ctx, req.(*AuthorizeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUserByToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserByTokenReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUserByToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/usercenter.UserService/GetUserByToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUserByToken(ctx, req.(*GetUserByTokenReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "usercenter.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetUserBySecret",
			Handler:    _UserService_GetUserBySecret_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _UserService_AddUser_Handler,
		},
		{
			MethodName: "GetUserInfo",
			Handler:    _UserService_GetUserInfo_Handler,
		},
		{
			MethodName: "Authorize",
			Handler:    _UserService_Authorize_Handler,
		},
		{
			MethodName: "GetUserByToken",
			Handler:    _UserService_GetUserByToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "usercenter.proto",
}
