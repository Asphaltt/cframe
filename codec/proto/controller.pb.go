// Code generated by protoc-gen-go. DO NOT EDIT.
// source: controller.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CSPType int32

const (
	CSPType_NONE CSPType = 0
	CSPType_ALI  CSPType = 1
	CSPType_QQ   CSPType = 2
	CSPType_AWS  CSPType = 3
)

var CSPType_name = map[int32]string{
	0: "NONE",
	1: "ALI",
	2: "QQ",
	3: "AWS",
}

var CSPType_value = map[string]int32{
	"NONE": 0,
	"ALI":  1,
	"QQ":   2,
	"AWS":  3,
}

func (x CSPType) String() string {
	return proto.EnumName(CSPType_name, int32(x))
}

func (CSPType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0}
}

type EdgeInfo struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	UserId               string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId"`
	CspType              CSPType  `protobuf:"varint,3,opt,name=cspType,proto3,enum=controller.CSPType" json:"cspType"`
	PublicIP             string   `protobuf:"bytes,4,opt,name=publicIP,proto3" json:"publicIP"`
	PublicPort           int32    `protobuf:"varint,5,opt,name=publicPort,proto3" json:"publicPort"`
	Cidr                 string   `protobuf:"bytes,6,opt,name=cidr,proto3" json:"cidr"`
	Comment              string   `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment"`
	ActiveAt             int64    `protobuf:"varint,8,opt,name=activeAt,proto3" json:"activeAt"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EdgeInfo) Reset()         { *m = EdgeInfo{} }
func (m *EdgeInfo) String() string { return proto.CompactTextString(m) }
func (*EdgeInfo) ProtoMessage()    {}
func (*EdgeInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{0}
}

func (m *EdgeInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EdgeInfo.Unmarshal(m, b)
}
func (m *EdgeInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EdgeInfo.Marshal(b, m, deterministic)
}
func (m *EdgeInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EdgeInfo.Merge(m, src)
}
func (m *EdgeInfo) XXX_Size() int {
	return xxx_messageInfo_EdgeInfo.Size(m)
}
func (m *EdgeInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EdgeInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EdgeInfo proto.InternalMessageInfo

func (m *EdgeInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EdgeInfo) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *EdgeInfo) GetCspType() CSPType {
	if m != nil {
		return m.CspType
	}
	return CSPType_NONE
}

func (m *EdgeInfo) GetPublicIP() string {
	if m != nil {
		return m.PublicIP
	}
	return ""
}

func (m *EdgeInfo) GetPublicPort() int32 {
	if m != nil {
		return m.PublicPort
	}
	return 0
}

func (m *EdgeInfo) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *EdgeInfo) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *EdgeInfo) GetActiveAt() int64 {
	if m != nil {
		return m.ActiveAt
	}
	return 0
}

type CSPInfo struct {
	CspType              CSPType  `protobuf:"varint,1,opt,name=cspType,proto3,enum=controller.CSPType" json:"cspType"`
	AccessKey            string   `protobuf:"bytes,2,opt,name=accessKey,proto3" json:"accessKey"`
	AccessSecret         string   `protobuf:"bytes,3,opt,name=accessSecret,proto3" json:"accessSecret"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CSPInfo) Reset()         { *m = CSPInfo{} }
func (m *CSPInfo) String() string { return proto.CompactTextString(m) }
func (*CSPInfo) ProtoMessage()    {}
func (*CSPInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{1}
}

func (m *CSPInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CSPInfo.Unmarshal(m, b)
}
func (m *CSPInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CSPInfo.Marshal(b, m, deterministic)
}
func (m *CSPInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CSPInfo.Merge(m, src)
}
func (m *CSPInfo) XXX_Size() int {
	return xxx_messageInfo_CSPInfo.Size(m)
}
func (m *CSPInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_CSPInfo.DiscardUnknown(m)
}

var xxx_messageInfo_CSPInfo proto.InternalMessageInfo

func (m *CSPInfo) GetCspType() CSPType {
	if m != nil {
		return m.CspType
	}
	return CSPType_NONE
}

func (m *CSPInfo) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *CSPInfo) GetAccessSecret() string {
	if m != nil {
		return m.AccessSecret
	}
	return ""
}

type Stat struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	EdgeName             string   `protobuf:"bytes,2,opt,name=edgeName,proto3" json:"edgeName"`
	Cpu                  int64    `protobuf:"varint,3,opt,name=cpu,proto3" json:"cpu"`
	Mem                  int64    `protobuf:"varint,4,opt,name=mem,proto3" json:"mem"`
	TrafficIn            int64    `protobuf:"varint,5,opt,name=trafficIn,proto3" json:"trafficIn"`
	TrafficOut           int64    `protobuf:"varint,6,opt,name=trafficOut,proto3" json:"trafficOut"`
	Timestamp            int64    `protobuf:"varint,7,opt,name=timestamp,proto3" json:"timestamp"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Stat) Reset()         { *m = Stat{} }
func (m *Stat) String() string { return proto.CompactTextString(m) }
func (*Stat) ProtoMessage()    {}
func (*Stat) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{2}
}

func (m *Stat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stat.Unmarshal(m, b)
}
func (m *Stat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stat.Marshal(b, m, deterministic)
}
func (m *Stat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stat.Merge(m, src)
}
func (m *Stat) XXX_Size() int {
	return xxx_messageInfo_Stat.Size(m)
}
func (m *Stat) XXX_DiscardUnknown() {
	xxx_messageInfo_Stat.DiscardUnknown(m)
}

var xxx_messageInfo_Stat proto.InternalMessageInfo

func (m *Stat) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *Stat) GetEdgeName() string {
	if m != nil {
		return m.EdgeName
	}
	return ""
}

func (m *Stat) GetCpu() int64 {
	if m != nil {
		return m.Cpu
	}
	return 0
}

func (m *Stat) GetMem() int64 {
	if m != nil {
		return m.Mem
	}
	return 0
}

func (m *Stat) GetTrafficIn() int64 {
	if m != nil {
		return m.TrafficIn
	}
	return 0
}

func (m *Stat) GetTrafficOut() int64 {
	if m != nil {
		return m.TrafficOut
	}
	return 0
}

func (m *Stat) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

type GetEdgeListReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetEdgeListReq) Reset()         { *m = GetEdgeListReq{} }
func (m *GetEdgeListReq) String() string { return proto.CompactTextString(m) }
func (*GetEdgeListReq) ProtoMessage()    {}
func (*GetEdgeListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{3}
}

func (m *GetEdgeListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEdgeListReq.Unmarshal(m, b)
}
func (m *GetEdgeListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEdgeListReq.Marshal(b, m, deterministic)
}
func (m *GetEdgeListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEdgeListReq.Merge(m, src)
}
func (m *GetEdgeListReq) XXX_Size() int {
	return xxx_messageInfo_GetEdgeListReq.Size(m)
}
func (m *GetEdgeListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEdgeListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetEdgeListReq proto.InternalMessageInfo

func (m *GetEdgeListReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetEdgeListReply struct {
	Code                 int32       `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message              string      `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Edges                []*EdgeInfo `protobuf:"bytes,3,rep,name=edges,proto3" json:"edges"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetEdgeListReply) Reset()         { *m = GetEdgeListReply{} }
func (m *GetEdgeListReply) String() string { return proto.CompactTextString(m) }
func (*GetEdgeListReply) ProtoMessage()    {}
func (*GetEdgeListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{4}
}

func (m *GetEdgeListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetEdgeListReply.Unmarshal(m, b)
}
func (m *GetEdgeListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetEdgeListReply.Marshal(b, m, deterministic)
}
func (m *GetEdgeListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetEdgeListReply.Merge(m, src)
}
func (m *GetEdgeListReply) XXX_Size() int {
	return xxx_messageInfo_GetEdgeListReply.Size(m)
}
func (m *GetEdgeListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetEdgeListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetEdgeListReply proto.InternalMessageInfo

func (m *GetEdgeListReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetEdgeListReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetEdgeListReply) GetEdges() []*EdgeInfo {
	if m != nil {
		return m.Edges
	}
	return nil
}

type AddEdgeReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name"`
	UserId               string   `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId"`
	CspType              CSPType  `protobuf:"varint,3,opt,name=cspType,proto3,enum=controller.CSPType" json:"cspType"`
	PublicIP             string   `protobuf:"bytes,4,opt,name=publicIP,proto3" json:"publicIP"`
	PublicPort           int32    `protobuf:"varint,5,opt,name=publicPort,proto3" json:"publicPort"`
	Cidr                 string   `protobuf:"bytes,6,opt,name=cidr,proto3" json:"cidr"`
	Comment              string   `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddEdgeReq) Reset()         { *m = AddEdgeReq{} }
func (m *AddEdgeReq) String() string { return proto.CompactTextString(m) }
func (*AddEdgeReq) ProtoMessage()    {}
func (*AddEdgeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{5}
}

func (m *AddEdgeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEdgeReq.Unmarshal(m, b)
}
func (m *AddEdgeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEdgeReq.Marshal(b, m, deterministic)
}
func (m *AddEdgeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEdgeReq.Merge(m, src)
}
func (m *AddEdgeReq) XXX_Size() int {
	return xxx_messageInfo_AddEdgeReq.Size(m)
}
func (m *AddEdgeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEdgeReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddEdgeReq proto.InternalMessageInfo

func (m *AddEdgeReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AddEdgeReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddEdgeReq) GetCspType() CSPType {
	if m != nil {
		return m.CspType
	}
	return CSPType_NONE
}

func (m *AddEdgeReq) GetPublicIP() string {
	if m != nil {
		return m.PublicIP
	}
	return ""
}

func (m *AddEdgeReq) GetPublicPort() int32 {
	if m != nil {
		return m.PublicPort
	}
	return 0
}

func (m *AddEdgeReq) GetCidr() string {
	if m != nil {
		return m.Cidr
	}
	return ""
}

func (m *AddEdgeReq) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

type AddEdgeReply struct {
	Code                 int32     `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message              string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data                 *EdgeInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AddEdgeReply) Reset()         { *m = AddEdgeReply{} }
func (m *AddEdgeReply) String() string { return proto.CompactTextString(m) }
func (*AddEdgeReply) ProtoMessage()    {}
func (*AddEdgeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{6}
}

func (m *AddEdgeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddEdgeReply.Unmarshal(m, b)
}
func (m *AddEdgeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddEdgeReply.Marshal(b, m, deterministic)
}
func (m *AddEdgeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddEdgeReply.Merge(m, src)
}
func (m *AddEdgeReply) XXX_Size() int {
	return xxx_messageInfo_AddEdgeReply.Size(m)
}
func (m *AddEdgeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddEdgeReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddEdgeReply proto.InternalMessageInfo

func (m *AddEdgeReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddEdgeReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddEdgeReply) GetData() *EdgeInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type DelEdgeReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	EdgeName             string   `protobuf:"bytes,2,opt,name=edgeName,proto3" json:"edgeName"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelEdgeReq) Reset()         { *m = DelEdgeReq{} }
func (m *DelEdgeReq) String() string { return proto.CompactTextString(m) }
func (*DelEdgeReq) ProtoMessage()    {}
func (*DelEdgeReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{7}
}

func (m *DelEdgeReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelEdgeReq.Unmarshal(m, b)
}
func (m *DelEdgeReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelEdgeReq.Marshal(b, m, deterministic)
}
func (m *DelEdgeReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelEdgeReq.Merge(m, src)
}
func (m *DelEdgeReq) XXX_Size() int {
	return xxx_messageInfo_DelEdgeReq.Size(m)
}
func (m *DelEdgeReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelEdgeReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelEdgeReq proto.InternalMessageInfo

func (m *DelEdgeReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DelEdgeReq) GetEdgeName() string {
	if m != nil {
		return m.EdgeName
	}
	return ""
}

type DelEdgeReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelEdgeReply) Reset()         { *m = DelEdgeReply{} }
func (m *DelEdgeReply) String() string { return proto.CompactTextString(m) }
func (*DelEdgeReply) ProtoMessage()    {}
func (*DelEdgeReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{8}
}

func (m *DelEdgeReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelEdgeReply.Unmarshal(m, b)
}
func (m *DelEdgeReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelEdgeReply.Marshal(b, m, deterministic)
}
func (m *DelEdgeReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelEdgeReply.Merge(m, src)
}
func (m *DelEdgeReply) XXX_Size() int {
	return xxx_messageInfo_DelEdgeReply.Size(m)
}
func (m *DelEdgeReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DelEdgeReply.DiscardUnknown(m)
}

var xxx_messageInfo_DelEdgeReply proto.InternalMessageInfo

func (m *DelEdgeReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DelEdgeReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetCSPListReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCSPListReq) Reset()         { *m = GetCSPListReq{} }
func (m *GetCSPListReq) String() string { return proto.CompactTextString(m) }
func (*GetCSPListReq) ProtoMessage()    {}
func (*GetCSPListReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{9}
}

func (m *GetCSPListReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCSPListReq.Unmarshal(m, b)
}
func (m *GetCSPListReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCSPListReq.Marshal(b, m, deterministic)
}
func (m *GetCSPListReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCSPListReq.Merge(m, src)
}
func (m *GetCSPListReq) XXX_Size() int {
	return xxx_messageInfo_GetCSPListReq.Size(m)
}
func (m *GetCSPListReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCSPListReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetCSPListReq proto.InternalMessageInfo

func (m *GetCSPListReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

type GetCSPListReply struct {
	Code                 int32      `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message              string     `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	CspInfo              []*CSPInfo `protobuf:"bytes,3,rep,name=cspInfo,proto3" json:"cspInfo"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetCSPListReply) Reset()         { *m = GetCSPListReply{} }
func (m *GetCSPListReply) String() string { return proto.CompactTextString(m) }
func (*GetCSPListReply) ProtoMessage()    {}
func (*GetCSPListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{10}
}

func (m *GetCSPListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCSPListReply.Unmarshal(m, b)
}
func (m *GetCSPListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCSPListReply.Marshal(b, m, deterministic)
}
func (m *GetCSPListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCSPListReply.Merge(m, src)
}
func (m *GetCSPListReply) XXX_Size() int {
	return xxx_messageInfo_GetCSPListReply.Size(m)
}
func (m *GetCSPListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCSPListReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetCSPListReply proto.InternalMessageInfo

func (m *GetCSPListReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetCSPListReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetCSPListReply) GetCspInfo() []*CSPInfo {
	if m != nil {
		return m.CspInfo
	}
	return nil
}

type AddCSPReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	CspType              CSPType  `protobuf:"varint,2,opt,name=cspType,proto3,enum=controller.CSPType" json:"cspType"`
	AccessKey            string   `protobuf:"bytes,3,opt,name=accessKey,proto3" json:"accessKey"`
	AccessSecret         string   `protobuf:"bytes,4,opt,name=accessSecret,proto3" json:"accessSecret"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCSPReq) Reset()         { *m = AddCSPReq{} }
func (m *AddCSPReq) String() string { return proto.CompactTextString(m) }
func (*AddCSPReq) ProtoMessage()    {}
func (*AddCSPReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{11}
}

func (m *AddCSPReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCSPReq.Unmarshal(m, b)
}
func (m *AddCSPReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCSPReq.Marshal(b, m, deterministic)
}
func (m *AddCSPReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCSPReq.Merge(m, src)
}
func (m *AddCSPReq) XXX_Size() int {
	return xxx_messageInfo_AddCSPReq.Size(m)
}
func (m *AddCSPReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCSPReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddCSPReq proto.InternalMessageInfo

func (m *AddCSPReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *AddCSPReq) GetCspType() CSPType {
	if m != nil {
		return m.CspType
	}
	return CSPType_NONE
}

func (m *AddCSPReq) GetAccessKey() string {
	if m != nil {
		return m.AccessKey
	}
	return ""
}

func (m *AddCSPReq) GetAccessSecret() string {
	if m != nil {
		return m.AccessSecret
	}
	return ""
}

type AddCSPReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Data                 *CSPInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddCSPReply) Reset()         { *m = AddCSPReply{} }
func (m *AddCSPReply) String() string { return proto.CompactTextString(m) }
func (*AddCSPReply) ProtoMessage()    {}
func (*AddCSPReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{12}
}

func (m *AddCSPReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddCSPReply.Unmarshal(m, b)
}
func (m *AddCSPReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddCSPReply.Marshal(b, m, deterministic)
}
func (m *AddCSPReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddCSPReply.Merge(m, src)
}
func (m *AddCSPReply) XXX_Size() int {
	return xxx_messageInfo_AddCSPReply.Size(m)
}
func (m *AddCSPReply) XXX_DiscardUnknown() {
	xxx_messageInfo_AddCSPReply.DiscardUnknown(m)
}

var xxx_messageInfo_AddCSPReply proto.InternalMessageInfo

func (m *AddCSPReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *AddCSPReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *AddCSPReply) GetData() *CSPInfo {
	if m != nil {
		return m.Data
	}
	return nil
}

type DelCSPReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	CspType              CSPType  `protobuf:"varint,2,opt,name=cspType,proto3,enum=controller.CSPType" json:"cspType"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelCSPReq) Reset()         { *m = DelCSPReq{} }
func (m *DelCSPReq) String() string { return proto.CompactTextString(m) }
func (*DelCSPReq) ProtoMessage()    {}
func (*DelCSPReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{13}
}

func (m *DelCSPReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelCSPReq.Unmarshal(m, b)
}
func (m *DelCSPReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelCSPReq.Marshal(b, m, deterministic)
}
func (m *DelCSPReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelCSPReq.Merge(m, src)
}
func (m *DelCSPReq) XXX_Size() int {
	return xxx_messageInfo_DelCSPReq.Size(m)
}
func (m *DelCSPReq) XXX_DiscardUnknown() {
	xxx_messageInfo_DelCSPReq.DiscardUnknown(m)
}

var xxx_messageInfo_DelCSPReq proto.InternalMessageInfo

func (m *DelCSPReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *DelCSPReq) GetCspType() CSPType {
	if m != nil {
		return m.CspType
	}
	return CSPType_NONE
}

type DelCSPReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelCSPReply) Reset()         { *m = DelCSPReply{} }
func (m *DelCSPReply) String() string { return proto.CompactTextString(m) }
func (*DelCSPReply) ProtoMessage()    {}
func (*DelCSPReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{14}
}

func (m *DelCSPReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelCSPReply.Unmarshal(m, b)
}
func (m *DelCSPReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelCSPReply.Marshal(b, m, deterministic)
}
func (m *DelCSPReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelCSPReply.Merge(m, src)
}
func (m *DelCSPReply) XXX_Size() int {
	return xxx_messageInfo_DelCSPReply.Size(m)
}
func (m *DelCSPReply) XXX_DiscardUnknown() {
	xxx_messageInfo_DelCSPReply.DiscardUnknown(m)
}

var xxx_messageInfo_DelCSPReply proto.InternalMessageInfo

func (m *DelCSPReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *DelCSPReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type GetStatReq struct {
	UserId               string   `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId"`
	EdgeName             string   `protobuf:"bytes,2,opt,name=edgeName,proto3" json:"edgeName"`
	From                 int64    `protobuf:"varint,3,opt,name=from,proto3" json:"from"`
	Count                int32    `protobuf:"varint,4,opt,name=count,proto3" json:"count"`
	Direction            int32    `protobuf:"varint,5,opt,name=direction,proto3" json:"direction"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatReq) Reset()         { *m = GetStatReq{} }
func (m *GetStatReq) String() string { return proto.CompactTextString(m) }
func (*GetStatReq) ProtoMessage()    {}
func (*GetStatReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{15}
}

func (m *GetStatReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatReq.Unmarshal(m, b)
}
func (m *GetStatReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatReq.Marshal(b, m, deterministic)
}
func (m *GetStatReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatReq.Merge(m, src)
}
func (m *GetStatReq) XXX_Size() int {
	return xxx_messageInfo_GetStatReq.Size(m)
}
func (m *GetStatReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatReq proto.InternalMessageInfo

func (m *GetStatReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func (m *GetStatReq) GetEdgeName() string {
	if m != nil {
		return m.EdgeName
	}
	return ""
}

func (m *GetStatReq) GetFrom() int64 {
	if m != nil {
		return m.From
	}
	return 0
}

func (m *GetStatReq) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *GetStatReq) GetDirection() int32 {
	if m != nil {
		return m.Direction
	}
	return 0
}

type GetStatReply struct {
	Code                 int32    `protobuf:"varint,1,opt,name=code,proto3" json:"code"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message"`
	Stats                []*Stat  `protobuf:"bytes,3,rep,name=stats,proto3" json:"stats"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatReply) Reset()         { *m = GetStatReply{} }
func (m *GetStatReply) String() string { return proto.CompactTextString(m) }
func (*GetStatReply) ProtoMessage()    {}
func (*GetStatReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed7f10298fa1d90f, []int{16}
}

func (m *GetStatReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatReply.Unmarshal(m, b)
}
func (m *GetStatReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatReply.Marshal(b, m, deterministic)
}
func (m *GetStatReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatReply.Merge(m, src)
}
func (m *GetStatReply) XXX_Size() int {
	return xxx_messageInfo_GetStatReply.Size(m)
}
func (m *GetStatReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatReply proto.InternalMessageInfo

func (m *GetStatReply) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *GetStatReply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *GetStatReply) GetStats() []*Stat {
	if m != nil {
		return m.Stats
	}
	return nil
}

func init() {
	proto.RegisterEnum("controller.CSPType", CSPType_name, CSPType_value)
	proto.RegisterType((*EdgeInfo)(nil), "controller.EdgeInfo")
	proto.RegisterType((*CSPInfo)(nil), "controller.CSPInfo")
	proto.RegisterType((*Stat)(nil), "controller.Stat")
	proto.RegisterType((*GetEdgeListReq)(nil), "controller.GetEdgeListReq")
	proto.RegisterType((*GetEdgeListReply)(nil), "controller.GetEdgeListReply")
	proto.RegisterType((*AddEdgeReq)(nil), "controller.AddEdgeReq")
	proto.RegisterType((*AddEdgeReply)(nil), "controller.AddEdgeReply")
	proto.RegisterType((*DelEdgeReq)(nil), "controller.DelEdgeReq")
	proto.RegisterType((*DelEdgeReply)(nil), "controller.DelEdgeReply")
	proto.RegisterType((*GetCSPListReq)(nil), "controller.GetCSPListReq")
	proto.RegisterType((*GetCSPListReply)(nil), "controller.GetCSPListReply")
	proto.RegisterType((*AddCSPReq)(nil), "controller.AddCSPReq")
	proto.RegisterType((*AddCSPReply)(nil), "controller.AddCSPReply")
	proto.RegisterType((*DelCSPReq)(nil), "controller.DelCSPReq")
	proto.RegisterType((*DelCSPReply)(nil), "controller.DelCSPReply")
	proto.RegisterType((*GetStatReq)(nil), "controller.GetStatReq")
	proto.RegisterType((*GetStatReply)(nil), "controller.GetStatReply")
}

func init() { proto.RegisterFile("controller.proto", fileDescriptor_ed7f10298fa1d90f) }

var fileDescriptor_ed7f10298fa1d90f = []byte{
	// 781 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xdc, 0x56, 0x5b, 0x6e, 0xd3, 0x40,
	0x14, 0x8d, 0xe3, 0x3c, 0x6f, 0x42, 0x31, 0x43, 0x29, 0x26, 0x54, 0x28, 0x9a, 0x0f, 0x1a, 0x55,
	0x6a, 0x91, 0xca, 0x1f, 0x0f, 0x89, 0x90, 0x96, 0x2a, 0xa2, 0x6a, 0x53, 0x1b, 0x09, 0x89, 0x3f,
	0xd7, 0x9e, 0x54, 0x96, 0xfc, 0xc2, 0x9e, 0x54, 0x0a, 0x2b, 0x60, 0x01, 0xac, 0x86, 0x5d, 0xf0,
	0xcd, 0x12, 0xd8, 0x04, 0x9a, 0x19, 0x3f, 0xc6, 0x55, 0x42, 0x71, 0xc5, 0x17, 0x5f, 0x9d, 0x7b,
	0x3c, 0x77, 0xe6, 0xde, 0x73, 0xcf, 0x9c, 0x06, 0x34, 0x3b, 0x0c, 0x68, 0x1c, 0x7a, 0x1e, 0x89,
	0xf7, 0xa3, 0x38, 0xa4, 0x21, 0x82, 0x02, 0xc1, 0xbf, 0x14, 0xe8, 0x1c, 0x39, 0x97, 0x64, 0x1a,
	0xcc, 0x43, 0x84, 0xa0, 0x11, 0x58, 0x3e, 0xd1, 0x95, 0xa1, 0x32, 0xea, 0x1a, 0x7c, 0x8d, 0xb6,
	0xa0, 0xb5, 0x48, 0x48, 0x3c, 0x75, 0xf4, 0x3a, 0x47, 0xd3, 0x08, 0xed, 0x41, 0xdb, 0x4e, 0xa2,
	0x0f, 0xcb, 0x88, 0xe8, 0xea, 0x50, 0x19, 0x6d, 0x1c, 0xdc, 0xdf, 0x97, 0x2e, 0x9a, 0x98, 0x33,
	0xf6, 0xc9, 0xc8, 0xf6, 0xa0, 0x01, 0x74, 0xa2, 0xc5, 0x85, 0xe7, 0xda, 0xd3, 0x99, 0xde, 0xe0,
	0x07, 0xe5, 0x31, 0x7a, 0x02, 0x20, 0xd6, 0xb3, 0x30, 0xa6, 0x7a, 0x73, 0xa8, 0x8c, 0x9a, 0x86,
	0x84, 0xb0, 0xb2, 0x6c, 0xd7, 0x89, 0xf5, 0x96, 0x28, 0x8b, 0xad, 0x91, 0x0e, 0x6d, 0x3b, 0xf4,
	0x7d, 0x12, 0x50, 0xbd, 0xcd, 0xe1, 0x2c, 0x64, 0x37, 0x59, 0x36, 0x75, 0xaf, 0xc8, 0x98, 0xea,
	0x9d, 0xa1, 0x32, 0x52, 0x8d, 0x3c, 0xc6, 0x5f, 0xa0, 0x3d, 0x31, 0x67, 0xbc, 0x57, 0xa9, 0x7e,
	0xe5, 0x2f, 0xea, 0xdf, 0x86, 0xae, 0x65, 0xdb, 0x24, 0x49, 0xde, 0x93, 0x65, 0xca, 0x44, 0x01,
	0x20, 0x0c, 0x7d, 0x11, 0x98, 0xc4, 0x8e, 0x09, 0xe5, 0x8c, 0x74, 0x8d, 0x12, 0x86, 0xbf, 0x2b,
	0xd0, 0x30, 0xa9, 0x45, 0x25, 0x46, 0x95, 0x12, 0xa3, 0x03, 0xe8, 0x10, 0xe7, 0x92, 0x9c, 0xb2,
	0x09, 0x88, 0x1b, 0xf2, 0x18, 0x69, 0xa0, 0xda, 0xd1, 0x82, 0x9f, 0xab, 0x1a, 0x6c, 0xc9, 0x10,
	0x9f, 0xf8, 0x9c, 0x4b, 0xd5, 0x60, 0x4b, 0x56, 0x22, 0x8d, 0xad, 0xf9, 0xdc, 0xb5, 0xa7, 0x01,
	0x67, 0x51, 0x35, 0x0a, 0x80, 0x91, 0x9c, 0x06, 0x67, 0x0b, 0xca, 0xa9, 0x54, 0x0d, 0x09, 0xe1,
	0xd9, 0xae, 0x4f, 0x12, 0x6a, 0xf9, 0x11, 0xa7, 0x94, 0x65, 0x67, 0x00, 0x1e, 0xc1, 0xc6, 0x31,
	0xa1, 0x4c, 0x28, 0x27, 0x6e, 0x42, 0x0d, 0xf2, 0x79, 0x5d, 0x17, 0xd8, 0x03, 0xad, 0xb4, 0x33,
	0xf2, 0x96, 0x7c, 0x80, 0xa1, 0x23, 0x88, 0x6e, 0x1a, 0x7c, 0xcd, 0x06, 0xe8, 0x93, 0x24, 0xb1,
	0x2e, 0xb3, 0x66, 0xb3, 0x10, 0xed, 0x42, 0x93, 0xf5, 0x9d, 0xe8, 0xea, 0x50, 0x1d, 0xf5, 0x0e,
	0x36, 0xe5, 0xb9, 0x64, 0x52, 0x35, 0xc4, 0x16, 0xfc, 0x43, 0x01, 0x18, 0x3b, 0x0e, 0x83, 0x59,
	0x51, 0xff, 0x83, 0x80, 0xf1, 0x1c, 0xfa, 0x79, 0x4b, 0xd5, 0xd9, 0x1b, 0x41, 0xc3, 0xb1, 0xa8,
	0xc5, 0x7b, 0x5a, 0x47, 0x1e, 0xdf, 0x81, 0xdf, 0x00, 0x1c, 0x12, 0x2f, 0xa3, 0xee, 0x16, 0xaa,
	0xc4, 0xaf, 0xa0, 0x9f, 0x9f, 0x50, 0xb9, 0x52, 0xbc, 0x03, 0x77, 0x8e, 0x09, 0x9d, 0x98, 0xb3,
	0x9b, 0x24, 0x15, 0xc0, 0x5d, 0x79, 0x63, 0x75, 0x4e, 0xc4, 0xa8, 0x59, 0xeb, 0xa9, 0xa6, 0xae,
	0x8f, 0x9a, 0xb3, 0x92, 0xed, 0xc1, 0xdf, 0x14, 0xe8, 0x8e, 0x1d, 0x67, 0x62, 0xce, 0xfe, 0x44,
	0x8c, 0xa4, 0x9f, 0x7a, 0x55, 0x03, 0x51, 0x6f, 0x32, 0x90, 0xc6, 0x0a, 0x03, 0x71, 0xa0, 0x97,
	0x55, 0x55, 0x9d, 0x82, 0x9d, 0x92, 0x2c, 0x56, 0xf6, 0x2f, 0x54, 0x61, 0x40, 0xf7, 0x90, 0x78,
	0xff, 0xb4, 0x77, 0xfc, 0x12, 0x7a, 0xd9, 0x99, 0xd5, 0x65, 0xf2, 0x55, 0x01, 0x38, 0x26, 0x94,
	0x59, 0xe7, 0x2d, 0x75, 0xca, 0x2e, 0x9c, 0xc7, 0xa1, 0x9f, 0xda, 0x27, 0x5f, 0xa3, 0x4d, 0x68,
	0xda, 0xe1, 0x22, 0x10, 0x54, 0x37, 0x0d, 0x11, 0xb0, 0x29, 0x39, 0x6e, 0x4c, 0x6c, 0xea, 0x86,
	0x41, 0xfa, 0x90, 0x0b, 0x00, 0x3b, 0xd0, 0xcf, 0x2b, 0xa9, 0x3e, 0x82, 0xa7, 0xd0, 0x4c, 0xa8,
	0x45, 0x33, 0x5f, 0xd3, 0x64, 0xca, 0xf8, 0x99, 0xe2, 0xf3, 0xee, 0x1e, 0xff, 0x27, 0xc5, 0x45,
	0xd3, 0x81, 0xc6, 0xe9, 0xd9, 0xe9, 0x91, 0x56, 0x43, 0x6d, 0x50, 0xc7, 0x27, 0x53, 0x4d, 0x41,
	0x2d, 0xa8, 0x9f, 0x9f, 0x6b, 0x75, 0x0e, 0x7c, 0x34, 0x35, 0xf5, 0xe0, 0xa7, 0x0a, 0xf7, 0x26,
	0xf9, 0x49, 0x26, 0x89, 0xaf, 0x5c, 0x9b, 0xa0, 0x29, 0xf4, 0x24, 0x1b, 0x46, 0x03, 0xf9, 0xb2,
	0xb2, 0x93, 0x0f, 0xb6, 0xd7, 0x7e, 0x8b, 0xbc, 0x25, 0xae, 0xa1, 0xd7, 0xd0, 0x4e, 0xfd, 0x08,
	0x6d, 0xc9, 0x5b, 0x0b, 0xdf, 0x1d, 0xe8, 0x2b, 0xf1, 0x3c, 0x3d, 0x35, 0x89, 0x72, 0x7a, 0xe1,
	0x3d, 0xe5, 0x74, 0xd9, 0x51, 0x70, 0x0d, 0xbd, 0xe3, 0xd3, 0x4f, 0x1f, 0x3f, 0x7a, 0x74, 0xad,
	0xd6, 0xc2, 0x3d, 0x06, 0x8f, 0xd7, 0x7d, 0x12, 0xe7, 0xbc, 0x80, 0x96, 0x78, 0x3d, 0xe8, 0xc1,
	0xb5, 0x62, 0x85, 0xd6, 0x07, 0x0f, 0x57, 0xc1, 0x79, 0xae, 0xd0, 0x6f, 0x39, 0x37, 0x7f, 0x27,
	0xe5, 0x5c, 0x49, 0xea, 0xa2, 0xfd, 0x54, 0x33, 0xe5, 0xf6, 0x0b, 0x49, 0x97, 0xdb, 0x97, 0x05,
	0x86, 0x6b, 0x6f, 0x3b, 0x9f, 0x5a, 0xcf, 0xf8, 0xaf, 0xb6, 0x8b, 0x16, 0xff, 0xf3, 0xfc, 0x77,
	0x00, 0x00, 0x00, 0xff, 0xff, 0x34, 0xe7, 0xca, 0x25, 0xd0, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ControllerServiceClient is the client API for ControllerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ControllerServiceClient interface {
	GetEdgeList(ctx context.Context, in *GetEdgeListReq, opts ...grpc.CallOption) (*GetEdgeListReply, error)
	AddEdge(ctx context.Context, in *AddEdgeReq, opts ...grpc.CallOption) (*AddEdgeReply, error)
	DelEdge(ctx context.Context, in *DelEdgeReq, opts ...grpc.CallOption) (*DelEdgeReply, error)
	GetCSPList(ctx context.Context, in *GetCSPListReq, opts ...grpc.CallOption) (*GetCSPListReply, error)
	AddCSP(ctx context.Context, in *AddCSPReq, opts ...grpc.CallOption) (*AddCSPReply, error)
	DelCSP(ctx context.Context, in *DelCSPReq, opts ...grpc.CallOption) (*DelCSPReply, error)
	GetStat(ctx context.Context, in *GetStatReq, opts ...grpc.CallOption) (*GetStatReply, error)
}

type controllerServiceClient struct {
	cc *grpc.ClientConn
}

func NewControllerServiceClient(cc *grpc.ClientConn) ControllerServiceClient {
	return &controllerServiceClient{cc}
}

func (c *controllerServiceClient) GetEdgeList(ctx context.Context, in *GetEdgeListReq, opts ...grpc.CallOption) (*GetEdgeListReply, error) {
	out := new(GetEdgeListReply)
	err := c.cc.Invoke(ctx, "/controller.ControllerService/GetEdgeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) AddEdge(ctx context.Context, in *AddEdgeReq, opts ...grpc.CallOption) (*AddEdgeReply, error) {
	out := new(AddEdgeReply)
	err := c.cc.Invoke(ctx, "/controller.ControllerService/AddEdge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) DelEdge(ctx context.Context, in *DelEdgeReq, opts ...grpc.CallOption) (*DelEdgeReply, error) {
	out := new(DelEdgeReply)
	err := c.cc.Invoke(ctx, "/controller.ControllerService/DelEdge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) GetCSPList(ctx context.Context, in *GetCSPListReq, opts ...grpc.CallOption) (*GetCSPListReply, error) {
	out := new(GetCSPListReply)
	err := c.cc.Invoke(ctx, "/controller.ControllerService/GetCSPList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) AddCSP(ctx context.Context, in *AddCSPReq, opts ...grpc.CallOption) (*AddCSPReply, error) {
	out := new(AddCSPReply)
	err := c.cc.Invoke(ctx, "/controller.ControllerService/AddCSP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) DelCSP(ctx context.Context, in *DelCSPReq, opts ...grpc.CallOption) (*DelCSPReply, error) {
	out := new(DelCSPReply)
	err := c.cc.Invoke(ctx, "/controller.ControllerService/DelCSP", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *controllerServiceClient) GetStat(ctx context.Context, in *GetStatReq, opts ...grpc.CallOption) (*GetStatReply, error) {
	out := new(GetStatReply)
	err := c.cc.Invoke(ctx, "/controller.ControllerService/GetStat", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ControllerServiceServer is the server API for ControllerService service.
type ControllerServiceServer interface {
	GetEdgeList(context.Context, *GetEdgeListReq) (*GetEdgeListReply, error)
	AddEdge(context.Context, *AddEdgeReq) (*AddEdgeReply, error)
	DelEdge(context.Context, *DelEdgeReq) (*DelEdgeReply, error)
	GetCSPList(context.Context, *GetCSPListReq) (*GetCSPListReply, error)
	AddCSP(context.Context, *AddCSPReq) (*AddCSPReply, error)
	DelCSP(context.Context, *DelCSPReq) (*DelCSPReply, error)
	GetStat(context.Context, *GetStatReq) (*GetStatReply, error)
}

// UnimplementedControllerServiceServer can be embedded to have forward compatible implementations.
type UnimplementedControllerServiceServer struct {
}

func (*UnimplementedControllerServiceServer) GetEdgeList(ctx context.Context, req *GetEdgeListReq) (*GetEdgeListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetEdgeList not implemented")
}
func (*UnimplementedControllerServiceServer) AddEdge(ctx context.Context, req *AddEdgeReq) (*AddEdgeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddEdge not implemented")
}
func (*UnimplementedControllerServiceServer) DelEdge(ctx context.Context, req *DelEdgeReq) (*DelEdgeReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelEdge not implemented")
}
func (*UnimplementedControllerServiceServer) GetCSPList(ctx context.Context, req *GetCSPListReq) (*GetCSPListReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCSPList not implemented")
}
func (*UnimplementedControllerServiceServer) AddCSP(ctx context.Context, req *AddCSPReq) (*AddCSPReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCSP not implemented")
}
func (*UnimplementedControllerServiceServer) DelCSP(ctx context.Context, req *DelCSPReq) (*DelCSPReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DelCSP not implemented")
}
func (*UnimplementedControllerServiceServer) GetStat(ctx context.Context, req *GetStatReq) (*GetStatReply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetStat not implemented")
}

func RegisterControllerServiceServer(s *grpc.Server, srv ControllerServiceServer) {
	s.RegisterService(&_ControllerService_serviceDesc, srv)
}

func _ControllerService_GetEdgeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetEdgeListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).GetEdgeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ControllerService/GetEdgeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).GetEdgeList(ctx, req.(*GetEdgeListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_AddEdge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddEdgeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).AddEdge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ControllerService/AddEdge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).AddEdge(ctx, req.(*AddEdgeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_DelEdge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelEdgeReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).DelEdge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ControllerService/DelEdge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).DelEdge(ctx, req.(*DelEdgeReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_GetCSPList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetCSPListReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).GetCSPList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ControllerService/GetCSPList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).GetCSPList(ctx, req.(*GetCSPListReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_AddCSP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddCSPReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).AddCSP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ControllerService/AddCSP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).AddCSP(ctx, req.(*AddCSPReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_DelCSP_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DelCSPReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).DelCSP(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ControllerService/DelCSP",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).DelCSP(ctx, req.(*DelCSPReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ControllerService_GetStat_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetStatReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ControllerServiceServer).GetStat(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/controller.ControllerService/GetStat",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ControllerServiceServer).GetStat(ctx, req.(*GetStatReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ControllerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "controller.ControllerService",
	HandlerType: (*ControllerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetEdgeList",
			Handler:    _ControllerService_GetEdgeList_Handler,
		},
		{
			MethodName: "AddEdge",
			Handler:    _ControllerService_AddEdge_Handler,
		},
		{
			MethodName: "DelEdge",
			Handler:    _ControllerService_DelEdge_Handler,
		},
		{
			MethodName: "GetCSPList",
			Handler:    _ControllerService_GetCSPList_Handler,
		},
		{
			MethodName: "AddCSP",
			Handler:    _ControllerService_AddCSP_Handler,
		},
		{
			MethodName: "DelCSP",
			Handler:    _ControllerService_DelCSP_Handler,
		},
		{
			MethodName: "GetStat",
			Handler:    _ControllerService_GetStat_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "controller.proto",
}
